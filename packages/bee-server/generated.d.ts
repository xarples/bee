/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as t from "./src/types"





declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  EntityEnum: "migration" | "seed"
  MigrationFilterEnum: "executed" | "pending"
}

export interface NexusGenRootTypes {
  DownMigrationResponse: { // root type
    message: string; // String!
    result: NexusGenRootTypes['DownResultResponse'][]; // [DownResultResponse!]!
    success: boolean; // Boolean!
  }
  GenerateResponse: { // root type
    message: string; // String!
    success: boolean; // Boolean!
  }
  InitResponse: { // root type
    message: string; // String!
    success: boolean; // Boolean!
  }
  Migration: { // root type
    name: string; // String!
    type: string; // String!
  }
  Mutation: {};
  Query: {};
  RunMigrationResponse: { // root type
    message: string; // String!
    result: NexusGenRootTypes['RunResultResponse'][]; // [RunResultResponse!]!
    success: boolean; // Boolean!
  }
  Seed: { // root type
    name: string; // String!
    type: string; // String!
  }
  MigrationInterface: NexusGenRootTypes['Migration'] | NexusGenRootTypes['Seed'];
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DownResultResponse: NexusGenRootTypes['Migration'] | NexusGenRootTypes['Seed'];
  RunResultResponse: NexusGenRootTypes['Migration'] | NexusGenRootTypes['Seed'];
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  EntityEnum: NexusGenEnums['EntityEnum'];
  MigrationFilterEnum: NexusGenEnums['MigrationFilterEnum'];
}

export interface NexusGenFieldTypes {
  DownMigrationResponse: { // field return type
    message: string; // String!
    result: NexusGenRootTypes['DownResultResponse'][]; // [DownResultResponse!]!
    success: boolean; // Boolean!
  }
  GenerateResponse: { // field return type
    message: string; // String!
    success: boolean; // Boolean!
  }
  InitResponse: { // field return type
    message: string; // String!
    success: boolean; // Boolean!
  }
  Migration: { // field return type
    name: string; // String!
    type: string; // String!
  }
  Mutation: { // field return type
    down: NexusGenRootTypes['DownMigrationResponse']; // DownMigrationResponse!
    generate: NexusGenRootTypes['GenerateResponse']; // GenerateResponse!
    init: NexusGenRootTypes['InitResponse']; // InitResponse!
    run: NexusGenRootTypes['RunMigrationResponse']; // RunMigrationResponse!
  }
  Query: { // field return type
    migrations: NexusGenRootTypes['Migration'][]; // [Migration!]!
    seeds: NexusGenRootTypes['Seed'][]; // [Seed!]!
  }
  RunMigrationResponse: { // field return type
    message: string; // String!
    result: NexusGenRootTypes['RunResultResponse'][]; // [RunResultResponse!]!
    success: boolean; // Boolean!
  }
  Seed: { // field return type
    name: string; // String!
    type: string; // String!
  }
  MigrationInterface: { // field return type
    name: string; // String!
    type: string; // String!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    down: { // args
      all?: boolean | null; // Boolean
      entity: NexusGenEnums['EntityEnum']; // EntityEnum!
    }
    generate: { // args
      fileName: string; // String!
      template: NexusGenEnums['EntityEnum']; // EntityEnum!
    }
    run: { // args
      entity: NexusGenEnums['EntityEnum']; // EntityEnum!
    }
  }
  Query: {
    migrations: { // args
      filter?: NexusGenEnums['MigrationFilterEnum'] | null; // MigrationFilterEnum
    }
    seeds: { // args
      filter?: NexusGenEnums['MigrationFilterEnum'] | null; // MigrationFilterEnum
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
  DownResultResponse: "Migration" | "Seed"
  RunResultResponse: "Migration" | "Seed"
  MigrationInterface: "Migration" | "Seed"
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "DownMigrationResponse" | "GenerateResponse" | "InitResponse" | "Migration" | "Mutation" | "Query" | "RunMigrationResponse" | "Seed";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "EntityEnum" | "MigrationFilterEnum";

export type NexusGenInterfaceNames = "MigrationInterface";

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = "DownResultResponse" | "RunResultResponse";

export interface NexusGenTypes {
  context: t.IContext;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}